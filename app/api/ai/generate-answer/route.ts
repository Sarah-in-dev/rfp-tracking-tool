import { NextResponse } from 'next/server';
// Removing OpenAI import for now to avoid dependency issues
// import { Configuration, OpenAIApi } from 'openai';

// Placeholder configuration to avoid import errors
// const configuration = new Configuration({
//   apiKey: process.env.OPENAI_API_KEY,
// });

// const openai = new OpenAIApi(configuration);

export async function POST(request: Request) {
  try {
    const { question, similarAnswers } = await request.json();
    
    if (!question) {
      return NextResponse.json(
        { error: 'Question is required' },
        { status: 400 }
      );
    }
    
    // Instead of calling OpenAI, just return a mock response
    const generatedText = `This is a mock answer for "${question}" that would normally be generated by AI.`;
    
    // Calculate a mock confidence score
    const confidence = 85;
    
    return NextResponse.json({
      text: generatedText,
      confidence,
      sourcesUsed: similarAnswers?.length || 0
    });
    
  } catch (error) {
    console.error('Error generating answer:', error);
    return NextResponse.json(
      { error: 'Failed to generate answer' },
      { status: 500 }
    );
  }
}
